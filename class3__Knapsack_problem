#include<bits/stdc++.h>
using namespace std;
int const sz=1e5+123;
long long wmax,n;
long long w[sz];
long long v[sz];
long long dp[120][sz];
long long solve(long long i,long long curW)
{
    if(i>n)
    {
        return 0;
    }
    if(dp[i][curW]!=-1)
    {
        return dp[i][curW];
    }
    long long ret1=0,ret2=0;
    if(w[i]+curW<=wmax)
    {
        ret1=v[i]+solve(i+1,w[i]+curW);
    }
    ret2=solve(i+1,curW);
    return dp[i][curW]=max(ret1,ret2);
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    long long tt=1;
   // cin>>tt;
    while(tt--)
    {
        long long i;
        cin>>n>>wmax;
        for(i=1;i<=n;i++)
        {
            cin>>w[i]>>v[i];
        }
        memset(dp,-1,sizeof(dp));
        cout<<solve(1,0)<<endl;
    }
    return 0;
}
